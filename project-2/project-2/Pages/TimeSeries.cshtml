@page

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Átméretezhető Mezők</title>

    <style>

#timeSeriesContainer {
    display: grid;
    grid-template-columns: 48% 4% 48%; /* Két panel és a függőleges resizer */
    grid-template-rows: 48% 4% 48%; /* Felső, resizer, alsó panel arányai */
    width: 100%; /* Teljes szélesség kitöltése */
    height: 80%; /* A szülő magasságának 80%-a */
}

.top-panel-left,
.top-panel-right {
    background-color: lightblue;
    padding: 0; /* Nincs padding */
    margin: 0; /* Nincs margin */
    overflow: auto; /* Ha szükséges, görgetés engedélyezése */
}

.resizer-vertical {
    background-color: gray;
    cursor: ew-resize;
    width: 10px; /* Rögzített szélesség */
}

.bottom-panel {
    background-color: lightcoral;
    padding: 0; /* Nincs padding */
    margin: 0; /* Nincs margin */
    overflow: auto; /* Ha szükséges, görgetés engedélyezése */
}

.resizer-horizontal {
    background-color: gray;
    cursor: ns-resize;
    height: 10px; /* Rögzített magasság */
}


    </style>
</head>

<body>
<div id="timeSeriesContainer">
    <!-- Felső sor: bal panel, függőleges resizer, jobb panel -->
    <div class="top-panel-left">Bal oldali tartalom</div>
    <div class="resizer-vertical"></div>
    <div class="top-panel-right">Jobb oldali tartalom</div>

    <!-- Vízszintes resizer sáv -->
    <div class="resizer-horizontal"></div>

    <!-- Alsó panel -->
    <div class="bottom-panel">Alsó panel tartalom</div>
</div>


<script>
    // Átméretezéshez szükséges változók
    const timeSeriesContainer = document.getElementById('timeSeriesContainer');
    const resizer = timeSeriesContainer.querySelector('.resizer-horizontal');
    const topPanel = timeSeriesContainer.querySelector('.top-panel');
    const bottomPanel = timeSeriesContainer.querySelector('.bottom-panel');

    let isDragging = false;

    // Egér események kezelése
    resizer.addEventListener('mousedown', (e) => {
        isDragging = true;
        document.body.style.cursor = 'ns-resize';
        e.preventDefault();
    });

    document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;

        const containerRect = timeSeriesContainer.getBoundingClientRect();
        const newHeight = Math.min(
            Math.max(e.clientY - containerRect.top, 50), // Minimum magasság
            containerRect.height - 60 // Minimum alsó panel magasság
        );

        topPanel.style.height = `${newHeight}px`;
        bottomPanel.style.height = `calc(100% - ${newHeight + 10}px)`; // +10px a resizer magassága
    });

    document.addEventListener('mouseup', () => {
        isDragging = false;
        document.body.style.cursor = 'default';
    });
</script>



</body>
</html>
